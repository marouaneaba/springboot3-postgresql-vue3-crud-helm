name: Release

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      releaseName:
        description: 'Name of the release'
        required: false
        default: ""

jobs:
  tag_release_eu:
    runs-on: [ self-hosted, decathlon ]
    strategy:
      matrix:
        image-name:
          - flyway
          - connection-api
          - synchro-suunto
          - synchro-coros
          - synchro-decathlon
          - synchro-fitbit
          - synchro-polar
          - synchro-strava
          - synchro-garmin
        area: [ Europe ]
        include:
          - area: Europe
            registry-path: member-worldwide-utes/member-worldwide-eu
            registry: MEMBER_DOCKER_REGISTRY_EUROPE
            registry-username: MEMBER_DOCKER_REGISTRY_USERNAME
            registry-password: MEMBER_DOCKER_REGISTRY_PASSWORD
    steps:
      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GHA_PERSONNAL_ADMIN_TOKEN }}
          ref: main
      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v3
        with:
          repository: dktunited/member-actions
          ref: v1
          token: ${{ secrets.DKTUNITED_TOKEN }}
          path: .github/member-actions
      - name: Setup variables
        uses: ./.github/member-actions/github-action-member-setup-env
      - name: Get version
        run: |
          echo 'Get version current version'
          version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$version">> $GITHUB_ENV
      - name: Login to Container Registry ${{ matrix.area }}
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets[matrix.registry] }}
          username: ${{ secrets[matrix.registry-username] }}
          password: ${{ secrets[matrix.registry-password] }}
      - name: Push ${{ matrix.image-name }} to registry ${{ matrix.area }}
        run: |
          docker image pull ${{ secrets[matrix.registry] }}/${{ matrix.registry-path }}/member-hub/${{ matrix.image-name }}:SNAPSHOT-${{ env.VERSION }}
          docker image tag ${{ secrets[matrix.registry] }}/${{ matrix.registry-path }}/member-hub/${{ matrix.image-name }}:SNAPSHOT-${{ env.VERSION }} ${{ secrets[matrix.registry] }}/${{ matrix.registry-path }}/member-hub/${{ matrix.image-name }}:RELEASE-${{env.VERSION}}
          docker push ${{ secrets[matrix.registry] }}/${{ matrix.registry-path }}/member-hub/${{ matrix.image-name }}:RELEASE-${{ env.VERSION }}

  push_to_registry_us_and_asie:
    # Push connection-api and flyway to registry america and asie
    runs-on: [ self-hosted, decathlon ]
    strategy:
      matrix:
        image-name:
          - flyway
          - connection-api
        area: [ America, Asie ]
        include:
          - area: America
            registry-path: member-worldwide-utes/member-worldwide-us
            registry: MEMBER_DOCKER_REGISTRY_AMERICA
            registry-username: MEMBER_DOCKER_REGISTRY_USERNAME
            registry-password: MEMBER_DOCKER_REGISTRY_PASSWORD

          - area: Asie
            registry-path: member-worldwide-utes/member-worldwide-as
            registry: MEMBER_DOCKER_REGISTRY_ASIE
            registry-username: MEMBER_DOCKER_REGISTRY_USERNAME
            registry-password: MEMBER_DOCKER_REGISTRY_PASSWORD
    steps:
      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GHA_PERSONNAL_ADMIN_TOKEN }}
          ref: main
      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v3
        with:
          repository: dktunited/member-actions
          ref: v1
          token: ${{ secrets.DKTUNITED_TOKEN }}
          path: .github/member-actions
      - name: Setup variables
        uses: ./.github/member-actions/github-action-member-setup-env
      - name: Get version
        run: |
          echo 'Get version current version'
          version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$version">> $GITHUB_ENV
      - name: Login to Container Registry ${{ matrix.area }}
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets[matrix.registry] }}
          username: ${{ secrets[matrix.registry-username] }}
          password: ${{ secrets[matrix.registry-password] }}
      - name: Push ${{ matrix.image-name }} to registry ${{ matrix.area }}
        run: |
          docker image pull ${{ secrets[matrix.registry] }}/${{ matrix.registry-path }}/member-hub/${{ matrix.image-name }}:SNAPSHOT-${{ env.VERSION }}
          docker image tag ${{ secrets[matrix.registry] }}/${{ matrix.registry-path }}/member-hub/${{ matrix.image-name }}:SNAPSHOT-${{ env.VERSION }} ${{ secrets[matrix.registry] }}/${{ matrix.registry-path }}/member-hub/${{ matrix.image-name }}:RELEASE-${{env.VERSION}}
          docker push ${{ secrets[matrix.registry] }}/${{ matrix.registry-path }}/member-hub/${{ matrix.image-name }}:RELEASE-${{ env.VERSION }}

  release:
    runs-on: [ self-hosted, decathlon ]
    needs: [ tag_release_eu, push_to_registry_us_and_asie ]
    steps:
      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GHA_PERSONNAL_ADMIN_TOKEN }} #If main is protected, you need to use an admin personnal token
          ref: main

      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v3
        with:
          repository: dktunited/member-actions
          ref: v1
          token: ${{ secrets.DKTUNITED_TOKEN }}
          path: .github/member-actions

      - name: Setup variables
        uses: ./.github/member-actions/github-action-member-setup-env

      - name: Get version
        run: |
          echo 'Change sources version according to maven= maven +1'
          version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$version">> $GITHUB_ENV

      - name: create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: RELEASE-${{env.VERSION}}
          release_name: ${{ github.event.inputs.releaseName }} ${{env.VERSION}}
          draft: false
          prerelease: false

      - name: Generate changelog
        uses: charmixer/auto-changelog-action@v1
        with:
          release_branch: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump version on main
        run: |
          echo 'Change sources version according to maven= maven +1'
          mvn -q build-helper:parse-version versions:set \
            -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}.0 \
            versions:commit
          version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$version">> $GITHUB_ENV

      - name: Push bump on main
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "CI: Change version to ${{ env.VERSION }}"
          push_options: '--force'
          branch: main
