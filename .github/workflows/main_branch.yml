name: Main

on:
  push:
    branches:
      - main

jobs:
  build-changelog-quality:
    runs-on: [self-hosted, decathlon]
    permissions:
      id-token: write
      contents: read
      actions: read
      issues: read
      pull-requests: read

    #avoid loop when bumping version :)
    if: "contains(github.event.head_commit.message, 'CI: Change version to') != true"

    steps:
      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"

      # Disable parallel workflow
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GHA_PERSONNAL_ADMIN_TOKEN }} # # If main is protected, you need to use an admin personnal token

      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v3
        with:
          repository: dktunited/member-actions
          ref: v1
          token: ${{ secrets.DKTUNITED_TOKEN }}
          path: .github/member-actions

      - name: Setup variables
        uses: ./.github/member-actions/github-action-member-setup-env

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          settings-path: ${{ github.workspace }}
          distribution: 'temurin'

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Bump version and set image name
        run: |
          mvn -q build-helper:parse-version versions:set \
            -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}\${parsedVersion.qualifier\?} \
            versions:commit
          version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$version">> $GITHUB_ENV

      - name: Generate changelog
        uses: charmixer/auto-changelog-action@v1
        with:
          release_branch: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Push bump
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "CI: Change version to ${{ env.VERSION }}"
          push_options: '--force'
          branch: main

      - name: auth gcloud
        id: auth
        uses: dktunited/.github/actions/gcloud_workload_identity@main
        with:
          workload_identity_provider: 'projects/889695046388/locations/global/workloadIdentityPools/ci-tools/providers/github'
          service_account: 'member-maven@member-worldwide-utes.iam.gserviceaccount.com'

      - name: Build with Maven
        run: mvn clean verify

      - name: checkmarx
        uses: dktunited/security/checkmarx@main
        with:
          cx-ast-secret: ${{ secrets.CX_AST_SECRET }}

      - name: Quality tests
        run: |
          mvn -q sonar:sonar -Dsonar.projectKey=dktunited_${{ env.ghrepo }} \
          -Dsonar.organization=dktunited \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{secrets.SONAR_TOKEN}} \
          -Dsonar.branch.name=main

      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"

  build-and-push-eu:
    runs-on: [self-hosted, decathlon]
    permissions:
      id-token: write
      contents: read
    needs: [ build-changelog-quality ]
    strategy:
      matrix:
        image-name: [ flyway, connection-api, synchro-suunto, synchro-decathlon, synchro-strava, synchro-polar, synchro-coros, synchro-fitbit, synchro-garmin ]
        include:
          - image-name: flyway
            docker-file-path: ./flyway/Dockerfile
          - image-name: connection-api
            docker-file-path: ./connection-api/Dockerfile
          - image-name: synchro-suunto
            docker-file-path: ./synchro-suunto/Dockerfile
          - image-name: synchro-decathlon
            docker-file-path: ./synchro-decathlon/Dockerfile
          - image-name: synchro-strava
            docker-file-path: ./synchro-strava/Dockerfile
          - image-name: synchro-polar
            docker-file-path: ./synchro-polar/Dockerfile
          - image-name: synchro-coros
            docker-file-path: ./synchro-coros/Dockerfile
          - image-name: synchro-fitbit
            docker-file-path: ./synchro-fitbit/Dockerfile
          - image-name: synchro-garmin
            docker-file-path: ./synchro-garmin/Dockerfile

    steps:
      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"

      - uses: actions/checkout@v3
        with:
          ref: 'main'
          token: ${{ secrets.GHA_PERSONNAL_ADMIN_TOKEN }}

      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v3
        with:
          repository: dktunited/member-actions
          ref: v1
          token: ${{ secrets.DKTUNITED_TOKEN }}
          path: .github/member-actions

      - name: Setup variables
        uses: ./.github/member-actions/github-action-member-setup-env

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          settings-path: ${{ github.workspace }}
          distribution: 'temurin'

      - name: auth gcloud
        id: auth
        uses: dktunited/.github/actions/gcloud_workload_identity@main
        with:
          workload_identity_provider: 'projects/889695046388/locations/global/workloadIdentityPools/ci-tools/providers/github'
          service_account: 'member-maven@member-worldwide-utes.iam.gserviceaccount.com'

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Check project build
        run: mvn clean compile package -DskipTests

      - name: Get version
        run: |
          echo 'Get version current version'
          version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$version">> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry Europe
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.MEMBER_DOCKER_REGISTRY_EUROPE }}
          username: ${{ secrets.MEMBER_DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.MEMBER_DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push ${{ matrix.image-name }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.docker-file-path }}
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.MEMBER_DOCKER_REGISTRY_EUROPE }}/member-worldwide-utes/member-worldwide-eu/member-hub/${{ matrix.image-name }}:SNAPSHOT-${{env.VERSION}}

      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"

  build-and-push-us:
    runs-on: [self-hosted, decathlon]
    permissions:
      id-token: write
      contents: read
    needs: [ build-changelog-quality ]
    strategy:
      matrix:
        image-name: [ flyway, connection-api ]
        include:
          - image-name: flyway
            docker-file-path: ./flyway/Dockerfile
          - image-name: connection-api
            docker-file-path: ./connection-api/Dockerfile

    steps:
      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"

      - uses: actions/checkout@v3
        with:
          ref: 'main'
          token: ${{ secrets.GHA_PERSONNAL_ADMIN_TOKEN }}

      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v3
        with:
          repository: dktunited/member-actions
          ref: v1
          token: ${{ secrets.DKTUNITED_TOKEN }}
          path: .github/member-actions

      - name: Setup variables
        uses: ./.github/member-actions/github-action-member-setup-env

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          settings-path: ${{ github.workspace }}
          distribution: 'temurin'

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: auth gcloud
        id: auth
        uses: dktunited/.github/actions/gcloud_workload_identity@main
        with:
          workload_identity_provider: 'projects/889695046388/locations/global/workloadIdentityPools/ci-tools/providers/github'
          service_account: 'member-maven@member-worldwide-utes.iam.gserviceaccount.com'

      - name: Check project build
        run: mvn clean compile package -DskipTests

      - name: Get version
        run: |
          echo 'Get version current version'
          version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$version">> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry America
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.MEMBER_DOCKER_REGISTRY_AMERICA }}
          username: ${{ secrets.MEMBER_DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.MEMBER_DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push ${{ matrix.image-name }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.docker-file-path }}
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.MEMBER_DOCKER_REGISTRY_AMERICA }}/member-worldwide-utes/member-worldwide-us/member-hub/${{ matrix.image-name }}:SNAPSHOT-${{env.VERSION}}

      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"

  build-and-push-asie:
    runs-on: [ self-hosted, decathlon ]
    permissions:
      id-token: write
      contents: read
    needs: [ build-changelog-quality ]
    strategy:
      matrix:
        image-name: [ flyway, connection-api ]
        include:
          - image-name: flyway
            docker-file-path: ./flyway/Dockerfile
          - image-name: connection-api
            docker-file-path: ./connection-api/Dockerfile

    steps:
      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"

      - uses: actions/checkout@v3
        with:
          ref: 'main'
          token: ${{ secrets.GHA_PERSONNAL_ADMIN_TOKEN }}

      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v3
        with:
          repository: dktunited/member-actions
          ref: v1
          token: ${{ secrets.DKTUNITED_TOKEN }}
          path: .github/member-actions

      - name: Setup variables
        uses: ./.github/member-actions/github-action-member-setup-env

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          settings-path: ${{ github.workspace }}
          distribution: 'temurin'

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: auth gcloud
        id: auth
        uses: dktunited/.github/actions/gcloud_workload_identity@main
        with:
          workload_identity_provider: 'projects/889695046388/locations/global/workloadIdentityPools/ci-tools/providers/github'
          service_account: 'member-maven@member-worldwide-utes.iam.gserviceaccount.com'

      - name: Check project build
        run: mvn clean compile package -DskipTests

      - name: Get version
        run: |
          echo 'Get version current version'
          version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$version">> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry ASIE
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.MEMBER_DOCKER_REGISTRY_ASIE }}
          username: ${{ secrets.MEMBER_DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.MEMBER_DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push ${{ matrix.image-name }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.docker-file-path }}
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.MEMBER_DOCKER_REGISTRY_ASIE }}/member-worldwide-utes/member-worldwide-as/member-hub/${{ matrix.image-name }}:SNAPSHOT-${{env.VERSION}}

      - name: clean
        uses: docker://centos
        if: ${{ always() }}
        continue-on-error: true
        with:
          args: "/bin/rm /github/workspace -rf"
