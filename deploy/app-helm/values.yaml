# Default values for app-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  namespace: crud-application

spring-microservice:
  enable: true

  livenessProbe:
    httpGet:
      port: 9090
      path: /actuator/health/liveness
  readinessProbe:
    httpGet:
      port: 9090
      path: /actuator/health/readiness
  enabled: true
  replicaCount: 1

  app:
    name: crud-application-test
  serviceMonitor:
    enabled: true
  image:
    nameOverride: crud-application-test
    repository: marouaneaba/spring-boot3-crud-application
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: c02fe0f73af6780fee8ec7e5102831c7d46dab64

  imagePullSecrets: [ ]
  nameOverride: "spring-test-app"
  fullnameOverride: "spring-tests-api"

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }
  podLabels: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
  #   cpu: 100m
  #   memory: 128Mi
#    requests:
#      cpu: 100m
#      memory: 128Mi
#    limits:
#      cpu: 1
#      memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.


  volumeMounts:
    - name: logging
      mountPath: /etc/config/app/logging.yaml
      readOnly: true
      subPath: logging.yaml
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  #volumeMounts: [ ]
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

